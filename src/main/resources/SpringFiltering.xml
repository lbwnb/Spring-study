<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd">
  <!-- 可以用 include,制定组件避免被Spring发现并被注册到容器中
  <context:component-scan base-package="com.lbwnb.spring">
  
  <context:include-filter type="regex"
  expression="com.lbwnb.spring.dao.*DAO.*"/>
  
  <context:include-filter type="regex"
  expression="com.lbwnb.spring.services.*Service.*"/>
  
  
  </context:component-scan>
   -->
  <!--  可以用 exclude,制定组件避免被Spring发现并被注册到容器中
  <context:component-scan base-package="com.lbwnb.spring">
  
  <context:exclude-filter type="annotation"
  expression="org.springframework.stereotype.Service"/>
  
  <context:exclude-filter type="regex"
  expression="com.lbwnb.spring.dao.*DAO.*"/>
  
  
  </context:component-scan>
    -->
    
    <!-- 通过byName 根据 Property 的 Name 自动装配，如果一个 bean 的 name ，和另一个 bean 中的 Property 的 name 相同，则自动装配这个 bean 到 Property 中
播
  <bean id="customerService" class="com.lbwnb.spring.services.CustomerService" autowire="byName">
  
  </bean>
  <bean id="customerDAO" class="com.lbwnb.spring.dao.CustomerDAO"/>
   -->
   
   <!-- 
   <bean id="customerService" class="com.lbwnb.spring.services.CustomerService" autowire="byType">
  
  </bean>
  <bean id="customerDAO" class="com.lbwnb.spring.dao.CustomerDAO"/>
    有两种相同数据类型的 bean 被配置，将抛出 UnsatisfiedDependencyException 异常 ,确保每个数据类型定义一个唯一的 bean 。
  <bean id="customerDAO_another" class="com.lbwnb.spring.dao.CustomerDAO"/>
  
   -->
   <!-- 寻找与参数数据类型相同的 bean -->
   <bean id="customerService" class="com.lbwnb.spring.services.CustomerService" autowire="constructor">
  
  </bean>
  <bean id="customerDAO" class="com.lbwnb.spring.dao.CustomerDAO"/>
  
  </beans>
  
  